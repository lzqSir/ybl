<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ybl.om.dao.mapper.user.RolePermissionMapper" >
  <resultMap id="BaseResultMap" type="com.ybl.om.model.user.RolePermission" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="role_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="permission_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="created_by" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="creation_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, permission_id, created_by, creation_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bk_role_permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bk_role_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ybl.om.model.user.RolePermission" >
    insert into bk_role_permission (id, role_id, permission_id, 
      created_by, creation_time)
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT}, 
      #{createdBy,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ybl.om.model.user.RolePermission" >
    insert into bk_role_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="permissionId != null" >
        permission_id,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null" >
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ybl.om.model.user.RolePermission" >
    update bk_role_permission
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null" >
        permission_id = #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ybl.om.model.user.RolePermission" >
    update bk_role_permission
    set role_id = #{roleId,jdbcType=BIGINT},
      permission_id = #{permissionId,jdbcType=BIGINT},
      created_by = #{createdBy,jdbcType=VARCHAR},
      creation_time = #{creationTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <sql id="where">
    <if test="role_ids != null">role_id IN <foreach collection="role_ids" item="item" index="index" open=" (" separator="," close=") ">  #{item} </foreach> </if>


  </sql>
  <select id="selectRolePermissionList" resultType="com.ybl.om.model.user.RolePermission" parameterType="java.util.Map">
    SELECT <include refid="Base_Column_List" />
    FROM bk_role_permission
    <where>
      <include refid="where" />
    </where>


  </select>
</mapper>